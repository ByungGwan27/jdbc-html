<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
   <!-- 1. 주소 변경 -->
<mapper namespace="com.yedam.notice.mapper.NoticeMapper">
	<!-- resultType="com.yedam.domain.Employee"> --> <!-- 3-2. Aliases 적용 전-->
	<!-- 3.클래스 선언문 바꾸듯 바꾸기 id는 클래스명과 동일-->
	<select id="getEmp" resultType="employee">
		select * from employees where employee_id = #{empId}
		<!-- 2. 테이블 수정 -->
	</select>
	<select id="empList" resultType="employee">
		select * from employees order by employee_id
	</select>
	   <!-- delete문과 insert문은 결과타입이 아닌 받아올 매개값이 있어야하므로 
  	parameter타입이 필요함  -->
	<delete id="delEmp" parameterType="int">
		delete from employees where employee_id = #{empId}
	</delete>
	<insert id="addEmp" parameterType="employee">
		insert into employees (employee_id,last_name,email,job_id,hire_date)
		values(#{employeeId},#{lastName},#{email},#{jobId},sysdate)
		<!-- 데이터이름이랑 맞춰주기 --> 
	</insert>

	<!--공지사항관련. 5.19 주석-->
	<!-- <select id="noticeList" resultType="notice">
		select * from tbl_notice order by 1 desc
	</select> -->
	
	<!-- 5.19 공지사항관련. -->
	<select id="noticeList" resultType="notice">
		<![CDATA[
		select * from tbl_notice WHERE rownum < 10 order by 1 desc
		]]>
	</select>
	
	<select id="noticeWithPage" resultType="notice">
		<!-- CDATA는 '<'같은걸 쓰기 위해서 -->
		<![CDATA[
		SELECT b.*
		FROM (SELECT rownum rn, a.*
			FROM (SELECT * FROM tbl_notice
				  ORDER BY 1 DESC) a
			WHERE rownum <= #{page} * 10 ) b
		WHERE b.rn > (#{page} - 1) * 10
		]]>
	</select>


	<!-- <insert id="insertNotice" parameterType="notice">
		insert into tbl_notice (notice_id, notice_writer, notice_title,
		notice_subject, attach_file)
		values(notice_seq.nextval, #{noticeWriter}, #{noticeTitle}, #{noticeSubject}, #{attachFile})
		#{}안에는 필드타입으로
	</insert> -->
	
	<!-- 5.19 16:15 -->
	<insert id="insertNotice" parameterType="notice">
	 <selectKey keyProperty="noticeId" resultType="int" order="BEFORE">
	 	SELECT notice_seq.nextval from dual
	 </selectKey>
		insert into tbl_notice (notice_id, notice_writer, notice_title,
		notice_subject, attach_file)
		values(notice_seq.nextval, #{noticeWriter}, #{noticeTitle}, #{noticeSubject}, #{attachFile})
		<!-- #{}안에는 필드타입으로 -->
	</insert>

	<update id="updateNotice" parameterType="notice">
		update tbl_notice
		set notice_title=#{noticeTitle},
		notice_subject=#{noticeSubject}
		where notice_id = #{noticeId}
	</update>
	
	<!-- 5.22 9:14 공지사항 파일만 변경-->
	<update id="updateNoticeFile" parameterType="notice">
		UPDATE tbl_notice
		SET attach_file = #{attachFile}
		WHERE notice_id = #{noticeId}
	</update>

	<delete id="deleteNotice" parameterType="int">
		delete from tbl_notice where notice_id=#{noticeId}
	</delete>

	<select id="searchNotice" resultType="notice"
		parameterType="int">
		select * from tbl_notice where notice_id=#{noticeId}
	</select>
	
	<!-- 조회수 -->
	<update id="updateCount" parameterType="int">
		update tbl_notice set hit_count=hit_count+1 where notice_id=#{noticeId}
	</update>
	
	<select id="getCount" resultType="int">
		SELECT count(*) FROM tbl_notice
	</select>

</mapper>